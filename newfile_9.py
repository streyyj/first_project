# scope: hikka_only
# meta developer: @d4n13lxx
# name: FCardAutoMatchAndRating

from .. import loader, utils
from hikkatl.tl.custom import MessageButton
import asyncio

@loader.tds
class FCardAutoMatchAndRatingMod(loader.Module):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ '–ú–∞—Ç—á', '–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á' –∏ '–†–µ–π—Ç–∏–Ω–≥' –≤ @F_CardBot"""

    strings = {
        "name": "FCardAutoMatchAndRating",
        "sending_menu": "‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ '–ú–µ–Ω—é'. –û–∂–∏–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫...",
        "clicking_match_button": "üéÆ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ú–∞—Ç—á'",
        "clicking_play_button": "‚öΩÔ∏è –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á'",
        "clicking_rating_button": "üèÜ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–†–µ–π—Ç–∏–Ω–≥'",
        "done": "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ.",
    }

    async def client_ready(self, client, db):
        self._client = client

    async def –º–µ–Ω—écmd(self, message):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å '–ú–µ–Ω—é', –Ω–∞–∂–∞—Ç—å '–ú–∞—Ç—á', '–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á' –∏ –∑–∞—Ç–µ–º '–†–µ–π—Ç–∏–Ω–≥'"""
        bot_username = "@F_CardBot"

        # –®–∞–≥ 0: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ú–µ–Ω—é"
        await self._client.send_message(bot_username, "–ú–µ–Ω—é")
        await utils.answer(message, self.strings["sending_menu"])

        # –ñ–¥—ë–º –æ—Ç–≤–µ—Ç
        await asyncio.sleep(1)

        # –®–∞–≥ 1: –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ú–∞—Ç—á"
        try:
            response = await self._client.get_messages(bot_username, limit=1)
            if not response:
                return await utils.answer(message, "‚ùå –ù–µ –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞")
            response = response[0]

            if not response.buttons:
                return await utils.answer(message, f"‚ùå –ö–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–æ–±—â–µ–Ω–∏–µ: {response.text}")

            match_button = None
            for row in response.buttons:
                for btn in row:
                    if isinstance(btn, MessageButton) and "–ú–∞—Ç—á" in btn.text:
                        match_button = btn
                        break
                if match_button:
                    break

            if not match_button:
                return await utils.answer(message, "‚ùå –ö–Ω–æ–ø–∫–∞ '–ú–∞—Ç—á' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

            await match_button.click()
            await utils.answer(message, self.strings["clicking_match_button"])
            await asyncio.sleep(1)

            # –®–∞–≥ 2: –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á"
            play_response = await self._client.get_messages(bot_username, limit=1)
            if not play_response:
                return await utils.answer(message, "‚ùå –ù–µ –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç –ø–æ—Å–ª–µ '–ú–∞—Ç—á'")
            play_response = play_response[0]

            if not play_response.buttons:
                return await utils.answer(message, f"‚ùå –ö–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–æ–±—â–µ–Ω–∏–µ: {play_response.text}")

            play_button = None
            for row in play_response.buttons:
                for btn in row:
                    if isinstance(btn, MessageButton) and "–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á" in btn.text:
                        play_button = btn
                        break
                if play_button:
                    break

            if not play_button:
                return await utils.answer(message, "‚ùå –ö–Ω–æ–ø–∫–∞ '–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

            await play_button.click()
            await utils.answer(message, self.strings["clicking_play_button"])
            await asyncio.sleep(1)

            # –®–∞–≥ 3: –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–†–µ–π—Ç–∏–Ω–≥"
            rating_response = await self._client.get_messages(bot_username, limit=1)
            if not rating_response:
                return await utils.answer(message, "‚ùå –ù–µ –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç –ø–æ—Å–ª–µ '–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á'")
            rating_response = rating_response[0]

            if not rating_response.buttons:
                return await utils.answer(message, f"‚ùå –ö–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–æ–±—â–µ–Ω–∏–µ: {rating_response.text}")

            rating_button = None
            for row in rating_response.buttons:
                for btn in row:
                    if isinstance(btn, MessageButton) and "–†–µ–π—Ç–∏–Ω–≥" in btn.text:
                        rating_button = btn
                        break
                if rating_button:
                    break

            if not rating_button:
                return await utils.answer(message, "‚ùå –ö–Ω–æ–ø–∫–∞ '–†–µ–π—Ç–∏–Ω–≥' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

            await rating_button.click()
            await utils.answer(message, self.strings["clicking_rating_button"])

            await utils.answer(message, self.strings["done"])

        except Exception as e:
            await utils.answer(message, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")