# scope: hikka_only
# meta developer: @d4n13lxx
# name: FCardAutoMatchAndPlay

from .. import loader, utils
from hikkatl.tl.custom import MessageButton


@loader.tds
class FCardAutoMatchAndPlayMod(loader.Module):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ '–ú–∞—Ç—á' –∏ '–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á' –≤ @F_CardBot"""

    strings = {
        "name": "FCardAutoMatchAndPlay",
        "sending_menu": "‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ '–ú–µ–Ω—é'. –û–∂–∏–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫...",
        "clicking_match_button": "üéÆ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ú–∞—Ç—á'",
        "clicking_play_button": "‚öΩÔ∏è –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á'",
        "play_count": "üîÅ –ù–∞–∂–∞—Ç–æ {} —Ä–∞–∑",
        "done": "‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ. –ù–∞–∂–∞—Ç–æ 5 —Ä–∞–∑.",
    }

    async def client_ready(self, client, db):
        self._client = client

    async def –º–µ–Ω—écmd(self, message):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å '–ú–µ–Ω—é', –Ω–∞–∂–∞—Ç—å '–ú–∞—Ç—á' –∏ –∑–∞—Ç–µ–º 5 —Ä–∞–∑ '–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á'"""
        bot_username = "@F_CardBot"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–ú–µ–Ω—é"
        await self._client.send_message(bot_username, "–ú–µ–Ω—é")
        await utils.answer(message, self.strings["sending_menu"])

        # –®–∞–≥ 1: –ñ–¥—ë–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ú–∞—Ç—á"
        try:
            response = await self._client.get_messages(bot_username, limit=1)
            if not response:
                return await utils.answer(message, "‚ùå –ù–µ –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞")

            response = response[0]
            if not response.buttons:
                return await utils.answer(message, "‚ùå –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç –∫–Ω–æ–ø–æ–∫")

            # –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ú–∞—Ç—á"
            for row in response.buttons:
                for button in row:
                    if isinstance(button, MessageButton) and button.text == "‚öΩÔ∏è –ú–∞—Ç—á":
                        await button.click()
                        await utils.answer(message, self.strings["clicking_match_button"])
                        break
            else:
                return await utils.answer(message, "‚ùå –ö–Ω–æ–ø–∫–∞ '–ú–∞—Ç—á' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

            # –®–∞–≥ 2: –ñ–¥—ë–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á"
            play_response = await self._client.get_messages(bot_username, limit=1)
            if not play_response:
                return await utils.answer(message, "‚ùå –ù–µ –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è '–ú–∞—Ç—á'")

            play_response = play_response[0]
            if not play_response.buttons:
                return await utils.answer(message, "‚ùå –í –æ—Ç–≤–µ—Ç–µ –Ω–µ—Ç –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ '–ú–∞—Ç—á'")

            # –ò—â–µ–º –∫–Ω–æ–ø–∫—É "–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á"
            play_button = None
            for row in play_response.buttons:
                for button in row:
                    if isinstance(button, MessageButton) and button.text == "–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á":
                        play_button = button
                        break
                if play_button:
                    break

            if not play_button:
                return await utils.answer(message, "‚ùå –ö–Ω–æ–ø–∫–∞ '–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

            # –®–∞–≥ 3: –ù–∞–∂–∏–º–∞–µ–º "–ò–≥—Ä–∞—Ç—å –º–∞—Ç—á" 5 —Ä–∞–∑
            count = 0
            while count < 5:
                await play_button.click()
                count += 1
                await utils.answer(message, self.strings["play_count"].format(count))
                await asyncio.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –Ω–∞–∂–∞—Ç–∏—è–º–∏ (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å)

            await utils.answer(message, self.strings["done"])

        except Exception as e:
            await utils.answer(message, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")